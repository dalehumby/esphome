# Lilygo T5 4.7 inch epaper display: Clock, calendar and current weather
# Weather icon help from https://community.home-assistant.io/t/display-materialdesign-icons-on-esphome-attached-to-screen/199790/16

esphome:
  name: epaper47
  includes:
    - weather_icon_map.h

esp32:
  board: esp32dev
  framework:
    type: arduino

wifi:
  networks:
    - ssid: !secret wifi_ssid
      password: !secret wifi_password
      manual_ip:
        static_ip: 10.0.0.133
        gateway: 10.0.0.1
        subnet: 255.255.255.0
        dns1: 10.0.0.1
    - ssid: !secret work_wifi_ssid
      password: !secret work_wifi_password
  ap:
    ssid: "Fallback Hotspot"
    password: !secret fallback_password

captive_portal:

mqtt:
  broker: !secret mqtt_broker
  port: !secret mqtt_port
  username: !secret mqtt_username
  password: !secret mqtt_password
  discovery: false

logger:

ota:

time:
  - platform: sntp
    id: tm
    timezone: "Europe/Stockholm"
    on_time:
      - seconds: 0
        minutes: /1
        then:
          - component.update: epaper
    on_time_sync:
      - then:
        - component.update: epaper  # TODO comment out once working

font:
  - file: "gfonts://Roboto"
    id: font_std
    size: 30
  - file: "gfonts://Roboto"
    id: font_minmax
    size: 50
  - file: "gfonts://Roboto"
    id: font_clock
    size: 150
    glyphs: "-0123456789:° "
  - file: fonts/FLIPclockblack.ttf
    id: flipclock
    size: 150
    glyphs: "0123456789:"
  - file: fonts/lcd.ttf
    id: lcd
    size: 150
    glyphs: "0123456789:"
  - file: fonts/materialdesignicons-webfont.ttf
    id: mdi_calendar
    size: 30
    glyphs:
      - "\U000F00ED" # calendar
  - file: fonts/materialdesignicons-webfont.ttf
    id: mdi_weather
    size: 150
    glyphs:
      - "\U000F0590" # weather-cloudy
      - "\U000F0F2F" # weather-cloudy-alert
      - "\U000F0E6E" # weather-cloudy-arrow-right
      - "\U000F0591" # weather-fog
      - "\U000F0592" # weather-hail
      - "\U000F0F30" # weather-hazy
      - "\U000F0898" # weather-hurricane
      - "\U000F0593" # weather-lightning
      - "\U000F067E" # weather-lightning-rainy
      - "\U000F0594" # weather-night
      - "\U000F0F31" # weather-night-partly-cloudy
      - "\U000F0595" # weather-partly-cloudy
      - "\U000F0F32" # weather-partly-lightning
      - "\U000F0F33" # weather-partly-rainy
      - "\U000F0F34" # weather-partly-snowy
      - "\U000F0F35" # weather-partly-snowy-rainy
      - "\U000F0596" # weather-pouring
      - "\U000F0597" # weather-rainy
      - "\U000F0598" # weather-snowy
      - "\U000F0F36" # weather-snowy-heavy
      - "\U000F067F" # weather-snowy-rainy
      - "\U000F0599" # weather-sunny
      - "\U000F0F37" # weather-sunny-alert
      - "\U000F14E4" # weather-sunny-off
      - "\U000F059A" # weather-sunset
      - "\U000F059B" # weather-sunset-down
      - "\U000F059C" # weather-sunset-up
      - "\U000F0F38" # weather-tornado
      - "\U000F059D" # weather-windy
      - "\U000F059E" # weather-windy-variant

external_components:
  - source: github://ashald/esphome@lilygo-t5-47
    components:
      - lilygo_t5_47

display:
  - platform: lilygo_t5_47
    rotation: 180°
    update_interval: never
    full_update_every: 10
    id: epaper
    lambda: |-
      #define xres 960
      #define yres 540
      #define x1_cntr xres/4    // left hand column
      #define x2_cntr xres/4*3  // right hand column

      // Quadrants
      it.line(xres/2, 0, xres/2, yres);
      it.line(0, yres/2, xres, yres/2);


      // Date and time
      #define ypad 50
      it.strftime(x1_cntr, ypad, id(font_std), TextAlign::CENTER, "%a, %e %b", id(tm).now());
      it.strftime(x1_cntr, yres/4, id(font_clock), TextAlign::CENTER, "%H:%M", id(tm).now());


      // Calendar
      #define xicon 10
      #define xtext 40
      #define ylinespace 50

      it.print(x1_cntr, yres/2+ypad, id(font_std), TextAlign::CENTER, "Up next");

      int y = yres/4*3 - ylinespace;
      it.print(xicon, y, id(mdi_calendar), TextAlign::CENTER_LEFT, "\U000F00ED");
      it.print(xtext, y, id(font_std), TextAlign::CENTER_LEFT, "10:00 Stanup");

      y += ylinespace;
      it.print(xicon, y, id(mdi_calendar), TextAlign::CENTER_LEFT, "\U000F00ED");
      it.print(xtext, y, id(font_std), TextAlign::CENTER_LEFT, "10:20 Planning: Backstreet Voice");

      y += ylinespace;
      it.print(xicon, y, id(mdi_calendar), TextAlign::CENTER_LEFT, "\U000F00ED");
      it.print(xtext, y, id(font_std), TextAlign::CENTER_LEFT, "11:30 Dale / Manuel 1on1");


      // Weather
      #define xweather xres*5/8
      #define xtemp xres*7/8
      #define xmaxmin xres*11/12

      y = yres/4;
      it.print(xweather, y, id(mdi_weather), TextAlign::CENTER, "\U000F0596");
      it.print(xtemp, y, id(font_clock), TextAlign::CENTER, "19°");
      //it.print(xmaxmin, y, id(font_minmax), TextAlign::BOTTOM_CENTER, "24°");
      //it.print(xmaxmin, y, id(font_minmax), TextAlign::TOP_CENTER, "16°");
      //it.print(xmaxmin, y, id(font_minmax), TextAlign::CENTER, "---");

      y = yres/2 - ylinespace;
      it.print(xweather, y, id(font_std), TextAlign::CENTER, "2.6 mm");
      it.print(xtemp, ypad, id(font_std), TextAlign::CENTER, "▼ 23°");
      it.print(xtemp, y, id(font_std), TextAlign::CENTER, "▲ 16°");
      it.print(xweather, ypad, id(font_std), TextAlign::CENTER, "▁▂▂▁▂▃▃▃");


      // Spotify
      #define xtitle xres*8/12
      #define ytitle yres*5/8
      #define xprogress xres*4/8
      #define yprogress yres*7/8

      it.filled_rectangle(xres/2, yres/2, yres/4, yres/4);
      it.print(xtitle, ytitle, id(font_minmax), TextAlign::BOTTOM_LEFT, "Porcelain");
      it.print(xtitle, ytitle, id(font_std), TextAlign::TOP_LEFT, "Moby");

      // Progress bar
      it.line(xres/2, yprogress, xres, yprogress);
      it.filled_rectangle(xres/2, yprogress-2, xres*7/8-xres/2, 4);
      it.filled_circle(xres*7/8, yprogress, 5);
      it.print(xres/2, yprogress, id(font_std), TextAlign::TOP_LEFT, "2:56");
      it.print(xres, yprogress, id(font_std), TextAlign::TOP_RIGHT, "-0:42");



sensor:
  - platform: mqtt_subscribe
    topic: epaper/wx/temp
    id: temperature
  - platform: mqtt_subscribe
    topic: epaper/wx/rain
    id: rainfall

text_sensor:
  - platform: mqtt_subscribe
    topic: epaper/wx/icon
    id: weather
  - platform: mqtt_subscribe
    id: next_event
    topic: epaper/nextevent

binary_sensor:
  - platform: gpio
    id: push_button
    pin: 
      number: GPIO39
      inverted: true
    filters:
      - delayed_off: 50ms
    on_press:
      then:
        - component.update: epaper
